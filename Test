/// <summary>Central helper that tells whether a point belongs to Input / Logic / Output.</summary>
internal static class LogicAreaClassifier
{
    // NOTE: target-typed “new()” is C# 9 — use the full generic form:
    private static readonly HashSet<string> _input =
        new HashSet<string>(StringComparer.OrdinalIgnoreCase)
        { "Symbol:AI", "Symbol:DI", ".eVT_AI", ".eVT_DI" /* extend as required */ };

    private static readonly HashSet<string> _output =
        new HashSet<string>(StringComparer.OrdinalIgnoreCase)
        { "Symbol:AO", "Symbol:DO", ".eVT_AO", ".eVT_DO" /* extend as required */ };

    internal static string GetAreaFor(string logicType)
    {
        // C# 7.3 / .NET 4.8 has no string.Contains 2-arg overload; fall back to IndexOf.
        if (_input.Any(t => logicType?.IndexOf(t, StringComparison.OrdinalIgnoreCase) >= 0))
            return SMConstants.InputArea;

        if (_output.Any(t => logicType?.IndexOf(t, StringComparison.OrdinalIgnoreCase) >= 0))
            return SMConstants.OutputArea;

        return SMConstants.LogicArea;
    }
}
